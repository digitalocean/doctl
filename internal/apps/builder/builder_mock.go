// Code generated by MockGen. DO NOT EDIT.
// Source: builder.go

// Package builder is a generated GoMock package.
package builder

import (
	context "context"
	reflect "reflect"

	godo "github.com/digitalocean/godo"
	gomock "github.com/golang/mock/gomock"
)

// MockComponentBuilderFactory is a mock of ComponentBuilderFactory interface.
type MockComponentBuilderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockComponentBuilderFactoryMockRecorder
}

// MockComponentBuilderFactoryMockRecorder is the mock recorder for MockComponentBuilderFactory.
type MockComponentBuilderFactoryMockRecorder struct {
	mock *MockComponentBuilderFactory
}

// NewMockComponentBuilderFactory creates a new mock instance.
func NewMockComponentBuilderFactory(ctrl *gomock.Controller) *MockComponentBuilderFactory {
	mock := &MockComponentBuilderFactory{ctrl: ctrl}
	mock.recorder = &MockComponentBuilderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComponentBuilderFactory) EXPECT() *MockComponentBuilderFactoryMockRecorder {
	return m.recorder
}

// NewComponentBuilder mocks base method.
func (m *MockComponentBuilderFactory) NewComponentBuilder(arg0 DockerEngineClient, arg1 string, arg2 *godo.AppSpec, arg3 NewBuilderOpts) (ComponentBuilder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewComponentBuilder", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(ComponentBuilder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewComponentBuilder indicates an expected call of NewComponentBuilder.
func (mr *MockComponentBuilderFactoryMockRecorder) NewComponentBuilder(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewComponentBuilder", reflect.TypeOf((*MockComponentBuilderFactory)(nil).NewComponentBuilder), arg0, arg1, arg2, arg3)
}

// MockComponentBuilder is a mock of ComponentBuilder interface.
type MockComponentBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockComponentBuilderMockRecorder
}

// MockComponentBuilderMockRecorder is the mock recorder for MockComponentBuilder.
type MockComponentBuilderMockRecorder struct {
	mock *MockComponentBuilder
}

// NewMockComponentBuilder creates a new mock instance.
func NewMockComponentBuilder(ctrl *gomock.Controller) *MockComponentBuilder {
	mock := &MockComponentBuilder{ctrl: ctrl}
	mock.recorder = &MockComponentBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComponentBuilder) EXPECT() *MockComponentBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockComponentBuilder) Build(arg0 context.Context) (ComponentBuilderResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", arg0)
	ret0, _ := ret[0].(ComponentBuilderResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build.
func (mr *MockComponentBuilderMockRecorder) Build(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockComponentBuilder)(nil).Build), arg0)
}
