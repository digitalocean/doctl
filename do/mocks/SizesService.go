// Code generated by MockGen. DO NOT EDIT.
// Source: sizes.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	do "github.com/digitalocean/doctl/do"
	gomock "github.com/golang/mock/gomock"
)

// MockSizesService is a mock of SizesService interface.
type MockSizesService struct {
	ctrl     *gomock.Controller
	recorder *MockSizesServiceMockRecorder
}

// MockSizesServiceMockRecorder is the mock recorder for MockSizesService.
type MockSizesServiceMockRecorder struct {
	mock *MockSizesService
}

// NewMockSizesService creates a new mock instance.
func NewMockSizesService(ctrl *gomock.Controller) *MockSizesService {
	mock := &MockSizesService{ctrl: ctrl}
	mock.recorder = &MockSizesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSizesService) EXPECT() *MockSizesServiceMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockSizesService) List() (do.Sizes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(do.Sizes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSizesServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSizesService)(nil).List))
}
