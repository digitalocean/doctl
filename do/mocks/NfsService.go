// Code generated by MockGen. DO NOT EDIT.
// Source: nfs.go
//
// Generated by this command:
//
//	mockgen -source nfs.go -package=mocks NfsService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	do "github.com/digitalocean/doctl/do"
	godo "github.com/digitalocean/godo"
	gomock "go.uber.org/mock/gomock"
)

// MockNfsService is a mock of NfsService interface.
type MockNfsService struct {
	ctrl     *gomock.Controller
	recorder *MockNfsServiceMockRecorder
	isgomock struct{}
}

// MockNfsServiceMockRecorder is the mock recorder for MockNfsService.
type MockNfsServiceMockRecorder struct {
	mock *MockNfsService
}

// NewMockNfsService creates a new mock instance.
func NewMockNfsService(ctrl *gomock.Controller) *MockNfsService {
	mock := &MockNfsService{ctrl: ctrl}
	mock.recorder = &MockNfsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNfsService) EXPECT() *MockNfsServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockNfsService) Create(arg0 *godo.NfsCreateRequest) (*do.Nfs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*do.Nfs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockNfsServiceMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNfsService)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockNfsService) Delete(id, region string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id, region)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockNfsServiceMockRecorder) Delete(id, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockNfsService)(nil).Delete), id, region)
}

// DeleteSnapshot mocks base method.
func (m *MockNfsService) DeleteSnapshot(snapshotID, region string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSnapshot", snapshotID, region)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSnapshot indicates an expected call of DeleteSnapshot.
func (mr *MockNfsServiceMockRecorder) DeleteSnapshot(snapshotID, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSnapshot", reflect.TypeOf((*MockNfsService)(nil).DeleteSnapshot), snapshotID, region)
}

// Get mocks base method.
func (m *MockNfsService) Get(id, region string) (*do.Nfs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id, region)
	ret0, _ := ret[0].(*do.Nfs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockNfsServiceMockRecorder) Get(id, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockNfsService)(nil).Get), id, region)
}

// GetSnapshot mocks base method.
func (m *MockNfsService) GetSnapshot(snapshotID, region string) (*do.NfsSnapshot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSnapshot", snapshotID, region)
	ret0, _ := ret[0].(*do.NfsSnapshot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSnapshot indicates an expected call of GetSnapshot.
func (mr *MockNfsServiceMockRecorder) GetSnapshot(snapshotID, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSnapshot", reflect.TypeOf((*MockNfsService)(nil).GetSnapshot), snapshotID, region)
}

// List mocks base method.
func (m *MockNfsService) List(region string) ([]do.Nfs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", region)
	ret0, _ := ret[0].([]do.Nfs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockNfsServiceMockRecorder) List(region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockNfsService)(nil).List), region)
}

// ListSnapshots mocks base method.
func (m *MockNfsService) ListSnapshots(shareID, region string) ([]do.NfsSnapshot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSnapshots", shareID, region)
	ret0, _ := ret[0].([]do.NfsSnapshot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSnapshots indicates an expected call of ListSnapshots.
func (mr *MockNfsServiceMockRecorder) ListSnapshots(shareID, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSnapshots", reflect.TypeOf((*MockNfsService)(nil).ListSnapshots), shareID, region)
}
