// Code generated by MockGen. DO NOT EDIT.
// Source: billing_history.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	do "github.com/digitalocean/doctl/do"
	gomock "github.com/golang/mock/gomock"
)

// MockBillingHistoryService is a mock of BillingHistoryService interface.
type MockBillingHistoryService struct {
	ctrl     *gomock.Controller
	recorder *MockBillingHistoryServiceMockRecorder
}

// MockBillingHistoryServiceMockRecorder is the mock recorder for MockBillingHistoryService.
type MockBillingHistoryServiceMockRecorder struct {
	mock *MockBillingHistoryService
}

// NewMockBillingHistoryService creates a new mock instance.
func NewMockBillingHistoryService(ctrl *gomock.Controller) *MockBillingHistoryService {
	mock := &MockBillingHistoryService{ctrl: ctrl}
	mock.recorder = &MockBillingHistoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBillingHistoryService) EXPECT() *MockBillingHistoryServiceMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockBillingHistoryService) List() (*do.BillingHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(*do.BillingHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockBillingHistoryServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockBillingHistoryService)(nil).List))
}
