// Code generated by MockGen. DO NOT EDIT.
// Source: partner_interconnect_attachments.go
//
// Generated by this command:
//
//	mockgen -source partner_interconnect_attachments.go -package=mocks -destination=mocks/PartnerInterconnectAttachmentsService.go PartnerInterconnectAttachmentsService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	do "github.com/digitalocean/doctl/do"
	godo "github.com/digitalocean/godo"
	gomock "go.uber.org/mock/gomock"
)

// MockPartnerInterconnectAttachmentsService is a mock of PartnerInterconnectAttachmentsService interface.
type MockPartnerInterconnectAttachmentsService struct {
	ctrl     *gomock.Controller
	recorder *MockPartnerInterconnectAttachmentsServiceMockRecorder
	isgomock struct{}
}

// MockPartnerInterconnectAttachmentsServiceMockRecorder is the mock recorder for MockPartnerInterconnectAttachmentsService.
type MockPartnerInterconnectAttachmentsServiceMockRecorder struct {
	mock *MockPartnerInterconnectAttachmentsService
}

// NewMockPartnerInterconnectAttachmentsService creates a new mock instance.
func NewMockPartnerInterconnectAttachmentsService(ctrl *gomock.Controller) *MockPartnerInterconnectAttachmentsService {
	mock := &MockPartnerInterconnectAttachmentsService{ctrl: ctrl}
	mock.recorder = &MockPartnerInterconnectAttachmentsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPartnerInterconnectAttachmentsService) EXPECT() *MockPartnerInterconnectAttachmentsServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPartnerInterconnectAttachmentsService) Create(arg0 *godo.PartnerInterconnectAttachmentCreateRequest) (*do.PartnerInterconnectAttachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*do.PartnerInterconnectAttachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockPartnerInterconnectAttachmentsServiceMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPartnerInterconnectAttachmentsService)(nil).Create), arg0)
}
