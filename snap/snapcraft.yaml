name: doctl
adopt-info: doctl
summary: The official DigitalOcean command line interface
description: |
  doctl allows you to interact with the DigitalOcean API via the command line.
  It supports most functionality found in the control panel. You can create,
  configure, and destroy DigitalOcean resources like Droplets, Kubernetes
  clusters, firewalls, load balancers, database clusters, domains, and more.
license: Apache-2.0

base: core20
grade: stable
confinement: strict

build-packages:
  - git

parts:
  launcher:
    source: snap/local/
    plugin: dump
    organize:
      doctl-launch: bin/
    override-build: |
      cd $SNAPCRAFT_PART_BUILD
      chmod +x doctl-launch
      snapcraftctl build
  doctl:
    after: [launcher]
    source: .
    plugin: go
    build-environment:
    # Results in installation to /snap/doctl/current/opt/sandbox
    - OVERRIDE_SANDBOX_DIR: "$SNAPCRAFT_PART_INSTALL/opt/sandbox"
    - SNAP_SANDBOX_INSTALL: "true"
    # Override to prevent 'invalid cross-device link' calling doctl
    - XDG_CONFIG_HOME: "$SNAPCRAFT_PART_INSTALL/tmp/.config"
    override-pull: |
      git clone https://github.com/digitalocean/doctl.git .
    override-build: |
      version=$(scripts/version.sh --snap)
      snapcraftctl set-version ${version}

      echo "==> Building doctl ${version} using $(go version)"

      short=${version#v}
      short=${short%+*}
      short=${short%-*}
      baseFlag="-X github.com/digitalocean/doctl"
      ldFlags="${baseFlag}.Label=release ${baseFlag}.Build=$(git rev-parse --short HEAD)"
      ldFlags="${ldFlags} ${baseFlag}.Major=$(echo ${short} | cut -d'.' -f1)"
      ldFlags="${ldFlags} ${baseFlag}.Minor=$(echo ${short} | cut -d'.' -f2)"
      ldFlags="${ldFlags} ${baseFlag}.Patch=$(echo ${short} | cut -d'.' -f3 | cut -d'+' -f1)"

      GO111MODULE=on CGO_ENABLED=0 go build -ldflags "${ldFlags}" -mod=vendor -o doctl cmd/doctl/main.go

      chmod +x doctl
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      mv doctl $SNAPCRAFT_PART_INSTALL/bin/

      # Install the sandbox
      mkdir -p $OVERRIDE_SANDBOX_DIR
      $SNAPCRAFT_PART_INSTALL/bin/doctl sandbox install
      rm -rf $XDG_CONFIG_HOME/doctl
    organize:
      bin/doctl: bin/doctl.real

plugs:
  dot-docker:
    interface: personal-files
    write:
      - $HOME/.docker
  doctl-config:
    interface: personal-files
    write:
      - $HOME/.config/doctl
  kube-config:
    interface: personal-files
    write:
      - $HOME/.kube/config
      - $HOME/.kube/config.lock

apps:
  doctl:
    command: bin/doctl-launch
    plugs:
      - home
      - network
      - ssh-keys
      - dot-docker
      - doctl-config
      - kube-config
